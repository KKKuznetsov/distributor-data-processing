import os
import csv
import subprocess
from pathlib import Path

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
base_dir = Path("C:/Users/user/Desktop/–ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ python")

# –ü—É—Ç–∏
distributors_dir = base_dir / "–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä—ã"
scripts_dir = base_dir / "–°–∫—Ä–∏–ø—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–æ–≤"
output_folder = base_dir / "–†–µ–µ—Å—Ç—Ä —Ñ–∞–π–ª–æ–≤"
output_file = output_folder / "registry.csv"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
output_folder.mkdir(parents=True, exist_ok=True)

rows = []

# === –®–ê–ì 1: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–ø–∏—Å–µ–π ===
for path in distributors_dir.rglob("*.*"):
    if path.suffix.lower() in [".xlsx", ".xls", ".csv"]:
        try:
            distributor = path.parts[-4]
            period = path.parts[-3]
            purchase_type = path.parts[-2]
        except IndexError:
            distributor = period = purchase_type = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"

        template_script = scripts_dir / f"{distributor}.py"
        status = ""  # –ü–æ–∫–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ–º

        rows.append([
            str(path),
            distributor,
            period,
            purchase_type,
            str(template_script) if template_script.exists() else "",
            status
        ])

# === –®–ê–ì 2: –°–æ—Ö—Ä–∞–Ω—è–µ–º registry.csv ===
with open(output_file, mode="w", newline="", encoding="utf-8-sig") as f:
    writer = csv.writer(f, delimiter=";", quoting=csv.QUOTE_MINIMAL)
    writer.writerow(["–ü—É—Ç—å", "–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä", "–ü–µ—Ä–∏–æ–¥", "–¢–∏–ø –∑–∞–∫—É–ø–∫–∏", "–®–∞–±–ª–æ–Ω", "–°—Ç–∞—Ç—É—Å"])
    writer.writerows(rows)

print(f"‚úÖ –†–µ–µ—Å—Ç—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_file}")

# === –®–ê–ì 3: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ===
launched = set()
for row in rows:
    script_path = row[4]
    if script_path and script_path not in launched:
        if Path(script_path).exists():
            try:
                result = subprocess.run(
                    ["python", script_path],
                    check=True,
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    timeout=120
                )
                print(f"üöÄ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω: {Path(script_path).name}")
                print(result.stdout.decode("utf-8", errors="ignore"))
            except subprocess.CalledProcessError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ {Path(script_path).name}:")
                print(e.stderr.decode("utf-8", errors="ignore"))
            launched.add(script_path)
